(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{504:function(a,t,s){"use strict";s.r(t);var v=s(25),e=Object(v.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("vmstat 测量上下文切换的次数")]),a._v(" "),s("h4",{attrs:{id:"如何减少上下文切换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何减少上下文切换"}},[a._v("#")]),a._v(" 如何减少上下文切换")]),a._v(" "),s("ul",[s("li",[a._v("无锁编程")]),a._v(" "),s("li",[a._v("cas算法")]),a._v(" "),s("li",[a._v("使用最少线程")]),a._v(" "),s("li",[a._v("协程")])]),a._v(" "),s("h5",{attrs:{id:"统计线程状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#统计线程状态"}},[a._v("#")]),a._v(" 统计线程状态")]),a._v(" "),s("blockquote",[s("p",[a._v("jstack能得到运行java程序的java stack和native stack的信息。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("jstack pid > filename\ngrep java.lang.Thread.State filename | awk '{print $2$3$4$5}' | sort | uniq -c\n")])])]),s("h5",{attrs:{id:"死锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#死锁"}},[a._v("#")]),a._v(" 死锁")]),a._v(" "),s("p",[a._v("指多个进程在运行过程中因争夺资源而造成的一种僵局，当进程处于这种僵持状态时，若无外力作用，它们都将无法再向前推进")]),a._v(" "),s("h5",{attrs:{id:"jvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm"}},[a._v("#")]),a._v(" jvm")]),a._v(" "),s("h5",{attrs:{id:"线程状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程状态"}},[a._v("#")]),a._v(" 线程状态")]),a._v(" "),s("p",[a._v("http://www.cnblogs.com/zhengyun_ustc/archive/2013/01/06/dumpanalysis.html")]),a._v(" "),s("ul",[s("li",[a._v("死锁，Deadlock（重点关注）")]),a._v(" "),s("li",[a._v("执行中，Runnable")]),a._v(" "),s("li",[a._v("等待资源，Waiting on condition（重点关注）")]),a._v(" "),s("li",[a._v("等待获取监视器，Waiting on monitor entry（重点关注）")]),a._v(" "),s("li",[a._v("暂停，Suspended")]),a._v(" "),s("li",[a._v("对象等待中，Object.wait() 或 TIMED_WAITING")]),a._v(" "),s("li",[a._v("阻塞，Blocked（重点关注）")]),a._v(" "),s("li",[a._v("停止，Parked")])]),a._v(" "),s("h5",{attrs:{id:"jstat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jstat"}},[a._v("#")]),a._v(" jstat")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("- S0C : survivor0区的总容量\n- S1C : survivor1区的总容量\n- S0U : survivor0区已使用的容量\n- S1C : survivor1区已使用的容量\n- EC : Eden区的总容量\n- EU : Eden区已使用的容量\n- OC : Old区的总容量\n- OU : Old区已使用的容量\n- PC 当前perm的容量 (KB)\n- PU perm的使用 (KB)\n- YGC : 新生代垃圾回收次数\n- YGCT : 新生代垃圾回收时间\n- FGC : 老年代垃圾回收次数\n- FGCT : 老年代垃圾回收时间\n- GCT : 垃圾回收总消耗时间\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);