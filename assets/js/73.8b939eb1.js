(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{539:function(t,a,r){"use strict";r.r(a);var s=r(8),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"fifo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fifo"}},[t._v("#")]),t._v(" FIFO")]),t._v(" "),r("h3",{attrs:{id:"说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[t._v("#")]),t._v(" 说明")]),t._v(" "),r("p",[t._v("FIFO(first in first out) 先进先出策略。")]),t._v(" "),r("p",[t._v("元素不停的加入缓存直到缓存满为止，当缓存满时，清理过期缓存对象，清理后依旧满则删除先入的缓存（链表首部对象）。")]),t._v(" "),r("p",[t._v("优点：简单快速 缺点：不灵活，不能保证最常用的对象总是被保留")]),t._v(" "),r("h3",{attrs:{id:"实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),r("h2",{attrs:{id:"lfu"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lfu"}},[t._v("#")]),t._v(" LFU")]),t._v(" "),r("h2",{attrs:{id:"lru"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lru"}},[t._v("#")]),t._v(" LRU")]),t._v(" "),r("h2",{attrs:{id:"timed"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#timed"}},[t._v("#")]),t._v(" Timed")]),t._v(" "),r("h2",{attrs:{id:"weak"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#weak"}},[t._v("#")]),t._v(" Weak")])])}),[],!1,null,null,null);a.default=e.exports}}]);