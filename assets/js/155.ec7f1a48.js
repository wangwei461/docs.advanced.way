(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{722:function(a,t,s){"use strict";s.r(t);var r=s(28),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"单创"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单创"}},[a._v("#")]),a._v(" 单创")]),a._v(" "),s("h3",{attrs:{id:"自我介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自我介绍"}},[a._v("#")]),a._v(" 自我介绍")]),a._v(" "),s("h3",{attrs:{id:"最近项目介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最近项目介绍"}},[a._v("#")]),a._v(" 最近项目介绍")]),a._v(" "),s("h3",{attrs:{id:"为什么使用线程池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用线程池"}},[a._v("#")]),a._v(" 为什么使用线程池")]),a._v(" "),s("ol",[s("li",[a._v("提高程序的执行效率")]),a._v(" "),s("li",[a._v("控制线程的数量，防止程序崩溃")])]),a._v(" "),s("h3",{attrs:{id:"线程池核心数怎么设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池核心数怎么设置"}},[a._v("#")]),a._v(" 线程池核心数怎么设置")]),a._v(" "),s("h3",{attrs:{id:"用过哪些设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用过哪些设计模式"}},[a._v("#")]),a._v(" 用过哪些设计模式")]),a._v(" "),s("p",[a._v("单利 策略 工厂 责任链 建造者")]),a._v(" "),s("h3",{attrs:{id:"最近的项目对你有什么提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最近的项目对你有什么提升"}},[a._v("#")]),a._v(" 最近的项目对你有什么提升")]),a._v(" "),s("ol",[s("li",[a._v("对整体架构设计有了一定的认识，系统架构不在神秘。也了解系统架构需要做哪些事情")]),a._v(" "),s("li",[a._v("进一步认识技术框架原理")]),a._v(" "),s("li",[a._v("学到修改字节码技术")])]),a._v(" "),s("h3",{attrs:{id:"为什么离职"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么离职"}},[a._v("#")]),a._v(" 为什么离职")]),a._v(" "),s("ol",[s("li",[a._v("个人安排")]),a._v(" "),s("li",[a._v("公司整体再走下坡路")]),a._v(" "),s("li",[a._v("感觉自己达到了技术瓶颈")])]),a._v(" "),s("h3",{attrs:{id:"锁升级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁升级"}},[a._v("#")]),a._v(" 锁升级")]),a._v(" "),s("p",[a._v("无锁、偏向锁，轻量级锁，重量级锁")]),a._v(" "),s("h3",{attrs:{id:"为什么要有锁升级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要有锁升级"}},[a._v("#")]),a._v(" 为什么要有锁升级")]),a._v(" "),s("ol",[s("li",[a._v("为了减少获得锁和释放锁带来的性能消耗")])]),a._v(" "),s("h3",{attrs:{id:"redis-锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-锁"}},[a._v("#")]),a._v(" redis 锁")]),a._v(" "),s("ol",[s("li",[a._v("setnx")]),a._v(" "),s("li",[a._v("redlock")])]),a._v(" "),s("h3",{attrs:{id:"加锁失败怎么处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加锁失败怎么处理"}},[a._v("#")]),a._v(" 加锁失败怎么处理")]),a._v(" "),s("ol",[s("li",[a._v("循环加锁 按次数/设置超时时间")])]),a._v(" "),s("h3",{attrs:{id:"什么情况下加锁失败"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么情况下加锁失败"}},[a._v("#")]),a._v(" 什么情况下加锁失败")]),a._v(" "),s("ol",[s("li",[a._v("锁已被其他线程占用")]),a._v(" "),s("li",[a._v("线程使用完毕，没有释放锁")])]),a._v(" "),s("h3",{attrs:{id:"redis-网络连接失败"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-网络连接失败"}},[a._v("#")]),a._v(" redis 网络连接失败")]),a._v(" "),s("ol",[s("li",[a._v("检查实例地址是否正确，ping 实例的服务器网络是否通畅，检查服务器是否正常")]),a._v(" "),s("li",[a._v("检查6379端口号是否开放，实例是否正常启动")]),a._v(" "),s("li",[a._v("判断是否开启了只绑定本地IP，是否开启了密码访问")]),a._v(" "),s("li",[a._v("使用 redis-cli 连接检查")])]),a._v(" "),s("h3",{attrs:{id:"redis-挂掉怎么办"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-挂掉怎么办"}},[a._v("#")]),a._v(" redis 挂掉怎么办")]),a._v(" "),s("ol",[s("li",[a._v("开启持久化功能")]),a._v(" "),s("li",[a._v("处理缓存丢失的数据")])]),a._v(" "),s("h3",{attrs:{id:"碰到问题怎么处理的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#碰到问题怎么处理的"}},[a._v("#")]),a._v(" 碰到问题怎么处理的")]),a._v(" "),s("ol",[s("li",[a._v("要冷静不慌乱，针对问题分析发生的原因")]),a._v(" "),s("li",[a._v("查找系统日志，定位到异常发生的位置，什么异常")]),a._v(" "),s("li",[a._v("求助同事，网络，或者GitHub")])]),a._v(" "),s("p",[a._v("事故排查过程:")]),a._v(" "),s("ol",[s("li",[a._v("打开前端系统查看宕机的表现，发现一次正常一次失败 判断: 一些服务器挂机造成负载均衡失效")]),a._v(" "),s("li",[a._v("打开服务监控系统查看哪些机器挂机，发现全部在线没有异常的机器 判断: 未有服务器挂机")]),a._v(" "),s("li",[a._v("登录阿里云查看redis，mysql实例是否正常，查看是否是第三方服务引起问题，发现全部正常 判断: 服务本身出了问题")]),a._v(" "),s("li",[a._v("从头开始排查，查看nginx日志，发现nginx实例正常，负载转发正常 判断: 非nginx原因")]),a._v(" "),s("li",[a._v("查看网关层A机器，系统cpu,内存,磁盘空间,实例日志，未发现异常")]),a._v(" "),s("li",[a._v("查看网关层B机器，cpu占满，实例日志异常不断输出 找到了问题机器，尝试重启应用节点，问题未修复")]),a._v(" "),s("li",[a._v("异常 "),s("code",[a._v("java.io.IOException: Too many open files")]),a._v(" 判断: 一个进程的文件描述符不够用")]),a._v(" "),s("li",[a._v("查看当前进程使用的句柄数 "),s("code",[a._v("lsof -n|awk '{print $2}'|sort|uniq -c|sort -nr|more")]),a._v(", 使用数远远超过设置的值，已设置为65535")])]),a._v(" "),s("p",[a._v("分析:")]),a._v(" "),s("ol",[s("li",[a._v("正常情况下使用完毕的句柄会被回收，但并没有被回收")]),a._v(" "),s("li",[a._v("回想是否在代码层面是否资源没有被释放掉的，代码层面没有这块的逻辑")]),a._v(" "),s("li",[a._v("初步判定 是 springcloud gateway 的问题")]),a._v(" "),s("li",[a._v("查找 springcloud gateway 的issue，找到相同的问题，官方给出的解释是低版本bug, 解决方案升级系统版本")]),a._v(" "),s("li",[a._v("论证升级版本的风险，版本升级，持续监控，问题解决")])]),a._v(" "),s("p",[a._v("耗时: 10-20 分钟")]),a._v(" "),s("p",[a._v("问题复盘: 小版本升级后，未做大规模压测。减少版本升级频率")]),a._v(" "),s("h3",{attrs:{id:"怎么看加班"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么看加班"}},[a._v("#")]),a._v(" 怎么看加班")]),a._v(" "),s("h2",{attrs:{id:"欢聚集团"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#欢聚集团"}},[a._v("#")]),a._v(" 欢聚集团")]),a._v(" "),s("p",[a._v("视频面试")]),a._v(" "),s("h3",{attrs:{id:"自我介绍-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自我介绍-2"}},[a._v("#")]),a._v(" 自我介绍")]),a._v(" "),s("h3",{attrs:{id:"业务架构和技术架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#业务架构和技术架构"}},[a._v("#")]),a._v(" 业务架构和技术架构")]),a._v(" "),s("h3",{attrs:{id:"最终一致性解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最终一致性解决方案"}},[a._v("#")]),a._v(" 最终一致性解决方案")]),a._v(" "),s("h3",{attrs:{id:"分布式事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式事务"}},[a._v("#")]),a._v(" 分布式事务")]),a._v(" "),s("h3",{attrs:{id:"秒杀系统怎么设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#秒杀系统怎么设计"}},[a._v("#")]),a._v(" 秒杀系统怎么设计")]),a._v(" "),s("ul",[s("li",[a._v("静态资源放入cdn服务器，oss存储")]),a._v(" "),s("li",[a._v("前端倒计时，到时间在放出按钮，点击后按钮置灰。时间分片（验证码）")]),a._v(" "),s("li",[a._v("限流 后端防止恶意请求，网关层限制同一ip或同一个账户访问，超过访问的限制，丢弃请求")]),a._v(" "),s("li",[a._v("缓存热点数据，redis 主从，集群")]),a._v(" "),s("li",[a._v("业务异步处理，消息队列")]),a._v(" "),s("li",[a._v("拓展机器，负载均衡")])]),a._v(" "),s("h3",{attrs:{id:"扣减库存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扣减库存"}},[a._v("#")]),a._v(" 扣减库存")]),a._v(" "),s("h3",{attrs:{id:"springboot启动过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboot启动过程"}},[a._v("#")]),a._v(" springboot启动过程")]),a._v(" "),s("h3",{attrs:{id:"spring启动过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring启动过程"}},[a._v("#")]),a._v(" spring启动过程")]),a._v(" "),s("h3",{attrs:{id:"调用超时-怎么排查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调用超时-怎么排查"}},[a._v("#")]),a._v(" 调用超时 怎么排查")]),a._v(" "),s("p",[a._v("排查调用链")]),a._v(" "),s("ul",[s("li",[a._v("检查网络 ping")]),a._v(" "),s("li",[a._v("检查负载均衡，网关，各服务实例CPU,内存，磁盘")]),a._v(" "),s("li",[a._v("检查数据库，查看慢日志")]),a._v(" "),s("li",[a._v("检查其他中间件")])]),a._v(" "),s("h3",{attrs:{id:"redis-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-数据类型"}},[a._v("#")]),a._v(" redis 数据类型")]),a._v(" "),s("h3",{attrs:{id:"zset-怎么实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zset-怎么实现"}},[a._v("#")]),a._v(" zset 怎么实现")]),a._v(" "),s("p",[a._v("ziplist或者skiplist")]),a._v(" "),s("h3",{attrs:{id:"redis-选举策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-选举策略"}},[a._v("#")]),a._v(" redis 选举策略")]),a._v(" "),s("h3",{attrs:{id:"redis-主从方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-主从方式"}},[a._v("#")]),a._v(" redis 主从方式")]),a._v(" "),s("h3",{attrs:{id:"juc-包用过哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#juc-包用过哪些"}},[a._v("#")]),a._v(" juc 包用过哪些")]),a._v(" "),s("p",[a._v("ReentrantLock")]),a._v(" "),s("h3",{attrs:{id:"可重入锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可重入锁"}},[a._v("#")]),a._v(" 可重入锁")]),a._v(" "),s("p",[a._v("某个线程已经获得某个锁，可以再次获取锁而不会出现死锁,")]),a._v(" "),s("p",[a._v("加锁的时候锁对象记录当前的对象的线程")]),a._v(" "),s("h3",{attrs:{id:"设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[a._v("#")]),a._v(" 设计模式")]),a._v(" "),s("h3",{attrs:{id:"工厂有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工厂有哪些"}},[a._v("#")]),a._v(" 工厂有哪些")]),a._v(" "),s("h3",{attrs:{id:"单利模式双重校验锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单利模式双重校验锁"}},[a._v("#")]),a._v(" 单利模式双重校验锁")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Foo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Helper")]),a._v(" helper "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Helper")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getHelper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 判断是否已创建实例，已创建直接返回实例。不在获取锁")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("helper "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("synchronized")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 如果其他线程曾获取过锁，那么变量已被初始化，返回初始化的变量")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("helper "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                    helper "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Helper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" helper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h3",{attrs:{id:"starter-怎么实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#starter-怎么实现的"}},[a._v("#")]),a._v(" starter 怎么实现的")]),a._v(" "),s("h3",{attrs:{id:"springboot-aop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboot-aop"}},[a._v("#")]),a._v(" springboot aop")]),a._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-boot-starter-aop"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("p",[a._v("引入了AOP依赖后，默认已经增加了 @EnableAspectJAutoProxy 导入 AspectJAutoProxyRegistrar\n加入 @Aspect注解")]),a._v(" "),s("p",[a._v("AspectJ是静态代理的增强，所谓的静态代理就是AOP框架会在编译阶段生成AOP代理类，因此也称为编译时增强")]),a._v(" "),s("h3",{attrs:{id:"cas-问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cas-问题"}},[a._v("#")]),a._v(" cas 问题")]),a._v(" "),s("p",[a._v("ABA 添加版本号")]),a._v(" "),s("h2",{attrs:{id:"新移传媒"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新移传媒"}},[a._v("#")]),a._v(" 新移传媒")]),a._v(" "),s("p",[a._v("电话面试")]),a._v(" "),s("h3",{attrs:{id:"自我介绍-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自我介绍-3"}},[a._v("#")]),a._v(" 自我介绍")]),a._v(" "),s("h3",{attrs:{id:"为什么离职-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么离职-2"}},[a._v("#")]),a._v(" 为什么离职")]),a._v(" "),s("h3",{attrs:{id:"cpu爆-怎么排查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cpu爆-怎么排查"}},[a._v("#")]),a._v(" cpu爆，怎么排查")]),a._v(" "),s("p",[a._v("top -Hp pid可以查看某个进程的线程信息\nprint pid 转换成16进制\njstack")]),a._v(" "),s("h3",{attrs:{id:"jvm-调优"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm-调优"}},[a._v("#")]),a._v(" jvm 调优")]),a._v(" "),s("h3",{attrs:{id:"mq-防止重复消费"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mq-防止重复消费"}},[a._v("#")]),a._v(" mq 防止重复消费")]),a._v(" "),s("p",[a._v("消费者 conform 解决 消息丢失\n记录message id 解决重复消费")]),a._v(" "),s("p",[a._v("消息顺序")]),a._v(" "),s("h3",{attrs:{id:"cdn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cdn"}},[a._v("#")]),a._v(" cdn")]),a._v(" "),s("h3",{attrs:{id:"mysql-回表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-回表"}},[a._v("#")]),a._v(" mysql 回表")]),a._v(" "),s("h3",{attrs:{id:"聚簇索引、非聚簇索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚簇索引、非聚簇索引"}},[a._v("#")]),a._v(" 聚簇索引、非聚簇索引")]),a._v(" "),s("h3",{attrs:{id:"redis-为什么快"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-为什么快"}},[a._v("#")]),a._v(" redis 为什么快")]),a._v(" "),s("ol",[s("li",[a._v("完全基于内存，绝大部分请求是纯粹的内存操作")]),a._v(" "),s("li",[a._v("采用单线程，避免了不必要的上下文切换和竞争条件，也不存在多进程或者多线程导致的切换而消耗 CPU")]),a._v(" "),s("li",[a._v("使用多路I/O复用模型 epoll")])]),a._v(" "),s("h3",{attrs:{id:"redis-集群-hash环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-集群-hash环"}},[a._v("#")]),a._v(" redis 集群，hash环")]),a._v(" "),s("h3",{attrs:{id:"触发-full-gc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触发-full-gc"}},[a._v("#")]),a._v(" 触发 full gc")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("System.gc()")])]),a._v(" "),s("li",[s("p",[a._v("老年代空间不足")])]),a._v(" "),s("li",[s("p",[a._v("堆中分配很大的对象")])])]),a._v(" "),s("h2",{attrs:{id:"税友"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#税友"}},[a._v("#")]),a._v(" 税友")]),a._v(" "),s("h3",{attrs:{id:"幂等性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#幂等性"}},[a._v("#")]),a._v(" 幂等性")]),a._v(" "),s("p",[a._v("对同一个系统，使用同样的条件，一次请求和重复的多次请求对系统资源的影响是一致的")]),a._v(" "),s("p",[a._v("实现")]),a._v(" "),s("p",[a._v("A请求携带一个唯一值key，B第一次访问缓存key、执行方法并缓存结果。第二次访问直接返回结果")]),a._v(" "),s("h3",{attrs:{id:"sql-索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-索引"}},[a._v("#")]),a._v(" sql 索引")]),a._v(" "),s("p",[a._v("假设有组合索引 index(a,b,c),以下情况不考虑 select * 内容 (覆盖索引)")]),a._v(" "),s("p",[a._v("where a = 3  用到索引 a")]),a._v(" "),s("p",[a._v("where a = 3 and b = 3 用到索引 a,b")]),a._v(" "),s("p",[a._v("where a = 3 and b = 4 and c = 5  用到索引 a,b,c")]),a._v(" "),s("p",[a._v("where b = 3 或者 where b = 3 and c = 4 或者 where c = 4 索引失效")]),a._v(" "),s("p",[a._v("where a = 3 and c = 5 用到索引 a")]),a._v(" "),s("p",[a._v("where a = 3 and b > 4 and c = 5 用到索引a和b，c不能用在范围之后")]),a._v(" "),s("p",[a._v("where a = 3 and b like 'kk%' and c = 4 用到索引a,b,c。")]),a._v(" "),s("p",[a._v("where a = 3 and b like '%kk' and c = 4 使用到 a")]),a._v(" "),s("p",[a._v("where a = 3 and b like '%kk%' and c = 4 用到 a")]),a._v(" "),s("p",[a._v("where a = 3 and b like 'k%kk%' and c = 4 用到a,b,c")]),a._v(" "),s("p",[a._v("切记使用索引字段值的类型必须匹配，否则索引无效。")]),a._v(" "),s("p",[a._v("只有 where 走索引")]),a._v(" "),s("h3",{attrs:{id:"解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析"}},[a._v("#")]),a._v(" 解析")]),a._v(" "),s("p",[a._v("from .. on ...join ..where ..group by ...having .select dinstinct ..order by ..limit..")]),a._v(" "),s("h2",{attrs:{id:"河马"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#河马"}},[a._v("#")]),a._v(" 河马")]),a._v(" "),s("p",[a._v("一面：")]),a._v(" "),s("h3",{attrs:{id:"项目介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目介绍"}},[a._v("#")]),a._v(" 项目介绍")]),a._v(" "),s("h3",{attrs:{id:"order-by"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#order-by"}},[a._v("#")]),a._v(" order by")]),a._v(" "),s("p",[a._v("mysql两种排序方式：文件排序或扫描索引排序")]),a._v(" "),s("p",[a._v("filesort和index，index效率高，它指mysql扫描索引本身完成排序，filesort方式效率低")]),a._v(" "),s("h3",{attrs:{id:"不用juc和sync实现线程安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不用juc和sync实现线程安全"}},[a._v("#")]),a._v(" 不用juc和sync实现线程安全")]),a._v(" "),s("h3",{attrs:{id:"分库分表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分库分表"}},[a._v("#")]),a._v(" 分库分表")]),a._v(" "),s("h3",{attrs:{id:"分库分表-分布式事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分库分表-分布式事务"}},[a._v("#")]),a._v(" 分库分表 分布式事务")]),a._v(" "),s("h3",{attrs:{id:"redis-数据结构-list底层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-数据结构-list底层"}},[a._v("#")]),a._v(" redis 数据结构 list底层")]),a._v(" "),s("h3",{attrs:{id:"redis-锁-如何不重试-获取锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-锁-如何不重试-获取锁"}},[a._v("#")]),a._v(" redis 锁，如何不重试，获取锁")]),a._v(" "),s("h3",{attrs:{id:"公平锁和非公平锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公平锁和非公平锁"}},[a._v("#")]),a._v(" 公平锁和非公平锁")]),a._v(" "),s("h3",{attrs:{id:"feign-调用过程-如何设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#feign-调用过程-如何设计"}},[a._v("#")]),a._v(" feign 调用过程，如何设计")]),a._v(" "),s("h3",{attrs:{id:"反问面试官"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反问面试官"}},[a._v("#")]),a._v(" 反问面试官")]),a._v(" "),s("h2",{attrs:{id:"citydo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#citydo"}},[a._v("#")]),a._v(" CityDo")]),a._v(" "),s("h3",{attrs:{id:"项目介绍-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目介绍-2"}},[a._v("#")]),a._v(" 项目介绍")]),a._v(" "),s("h3",{attrs:{id:"spring-事务隔离-mysql-数据库默认隔离级别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-事务隔离-mysql-数据库默认隔离级别"}},[a._v("#")]),a._v(" spring 事务隔离,mysql 数据库默认隔离级别")]),a._v(" "),s("p",[a._v("mysql8")]),a._v(" "),s("h3",{attrs:{id:"数据库编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库编码"}},[a._v("#")]),a._v(" 数据库编码")]),a._v(" "),s("p",[a._v("utf8mb4")]),a._v(" "),s("h3",{attrs:{id:"sql-调优"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-调优"}},[a._v("#")]),a._v(" Sql 调优")]),a._v(" "),s("ol",[s("li",[a._v("使用索引")]),a._v(" "),s("li",[a._v("预编译")]),a._v(" "),s("li",[a._v("避免在索引上使用计算")]),a._v(" "),s("li",[a._v("尽量将多条SQL语句压缩到一句SQL中")]),a._v(" "),s("li",[a._v("使用表的别名")]),a._v(" "),s("li",[a._v("更新Update语句优化")])]),a._v(" "),s("p",[a._v("如果只更改1、2个字段，不要Update全部字段，否则频繁调用会引起明显的性能消耗，同时带来大量日志")]),a._v(" "),s("ol",{attrs:{start:"7"}},[s("li",[a._v("插入Insert语句优化")])]),a._v(" "),s("p",[a._v("在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert")]),a._v(" "),s("ol",{attrs:{start:"8"}},[s("li",[a._v("查询select语句优化")]),a._v(" "),s("li",[a._v("用varchar 代替 char")])]),a._v(" "),s("h3",{attrs:{id:"select-type-几种类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select-type-几种类型"}},[a._v("#")]),a._v(" select_type 几种类型")]),a._v(" "),s("ul",[s("li",[a._v("SIMPLE 简单的SELECT语句（不包括UNION操作或子查询操作）")])]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("explain")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("select")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("user")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("where")]),a._v(" uid"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("ul",[s("li",[a._v("PRIMARY 查询中最外层的SELECT（如两表做UNION或者存在子查询的外层的表操作为PRIMARY，内层的操作为UNION）")]),a._v(" "),s("li",[a._v("DERIVED：导出表的SELECT（FROM子句的子查询）")])]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("explain")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("select")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("select")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" table_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("ul",[s("li",[a._v("UNION 第二层，在SELECT之后使用了UNION")]),a._v(" "),s("li",[a._v("UNION RESULT UNION的结果")]),a._v(" "),s("li",[a._v("DEPENDENT UNION UNION语句中的第二个SELECT，依赖于外部子查询")])]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("explain")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("select")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("user")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("where")]),a._v(" uid"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("union")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("select")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("user")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("where")]),a._v(" uid"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n")])])]),s("ul",[s("li",[a._v("SUBQUERY 子查询中首个SELECT（如果有多个子查询存在）")]),a._v(" "),s("li",[a._v("DEPENDENT SUBQUERY：子查询中首个SELECT，但依赖于外层的表（如果有多个子查询存在）")])]),a._v(" "),s("h3",{attrs:{id:"分布式原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式原理"}},[a._v("#")]),a._v(" 分布式原理")]),a._v(" "),s("p",[a._v("CAP BASE")]),a._v(" "),s("h3",{attrs:{id:"springboot-自动装配原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboot-自动装配原理"}},[a._v("#")]),a._v(" springboot 自动装配原理")]),a._v(" "),s("h3",{attrs:{id:"redis-哪些场景使用锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-哪些场景使用锁"}},[a._v("#")]),a._v(" redis 哪些场景使用锁")]),a._v(" "),s("p",[a._v("setnx 成功，返回 1 ,失败，返回 0")]),a._v(" "),s("p",[a._v("调度平台、扣减库存")]),a._v(" "),s("h3",{attrs:{id:"消息队列多消费端怎么处理-消费者注意什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息队列多消费端怎么处理-消费者注意什么"}},[a._v("#")]),a._v(" 消息队列多消费端怎么处理，消费者注意什么")]),a._v(" "),s("p",[a._v("设置消费端数量")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@RabbitListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("concurrency"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("数据重复被消费")]),a._v(" "),s("h3",{attrs:{id:"消息队列使用场景-为什么选用rabbitmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息队列使用场景-为什么选用rabbitmq"}},[a._v("#")]),a._v(" 消息队列使用场景，为什么选用rabbitmq")]),a._v(" "),s("ol",[s("li",[a._v("从社区活跃度")]),a._v(" "),s("li",[a._v("底层erlang实现")]),a._v(" "),s("li",[a._v("吞吐量")]),a._v(" "),s("li",[a._v("配置量小")])]),a._v(" "),s("h3",{attrs:{id:"线程池参数-如何创建线程池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池参数-如何创建线程池"}},[a._v("#")]),a._v(" 线程池参数，如何创建线程池")]),a._v(" "),s("h3",{attrs:{id:"生产事故"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生产事故"}},[a._v("#")]),a._v(" 生产事故")]),a._v(" "),s("h3",{attrs:{id:"feign-调优"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#feign-调优"}},[a._v("#")]),a._v(" feign 调优")]),a._v(" "),s("ol",[s("li",[a._v("开启熔断")]),a._v(" "),s("li",[a._v("配置连接时间、超时时间，最大连接数")]),a._v(" "),s("li",[a._v("使用okhttp客户端，配置连接池")]),a._v(" "),s("li",[a._v("请求日志 Logger.Level")]),a._v(" "),s("li",[a._v("请求、返回数据压缩gzip")])]),a._v(" "),s("h3",{attrs:{id:"feign-调用过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#feign-调用过程"}},[a._v("#")]),a._v(" feign 调用过程")]),a._v(" "),s("ol",[s("li",[a._v("基于面向接口的动态代理方式生成实现类")]),a._v(" "),s("li",[a._v("根据Contract协议规则，解析接口类的注解信息，解析成内部表现")]),a._v(" "),s("li",[a._v("基于 RequestBean，动态生成Request")]),a._v(" "),s("li",[a._v("使用Encoder 将Bean转换成 Http报文正文")]),a._v(" "),s("li",[a._v("拦截器负责对请求和返回进行装饰处理")]),a._v(" "),s("li",[a._v("日志记录")]),a._v(" "),s("li",[a._v("基于重试器发送HTTP请求")]),a._v(" "),s("li",[a._v("发送Http请求")])]),a._v(" "),s("h3",{attrs:{id:"链路跟踪什么原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链路跟踪什么原理"}},[a._v("#")]),a._v(" 链路跟踪什么原理")]),a._v(" "),s("h2",{attrs:{id:"有赞"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有赞"}},[a._v("#")]),a._v(" 有赞")]),a._v(" "),s("p",[a._v("一面")]),a._v(" "),s("h3",{attrs:{id:"自我介绍-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自我介绍-4"}},[a._v("#")]),a._v(" 自我介绍")]),a._v(" "),s("h3",{attrs:{id:"离职原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#离职原因"}},[a._v("#")]),a._v(" 离职原因")]),a._v(" "),s("h3",{attrs:{id:"秒杀场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#秒杀场景"}},[a._v("#")]),a._v(" 秒杀场景")]),a._v(" "),s("p",[a._v("缓存商品库存数据到redis中，预减库存，将扣减库存成功的放入消息队列处理订单创建，通过websocket通知前端下单成功")]),a._v(" "),s("p",[a._v("付款完成后扣减数据库库存，付款倒计时，超出时间库存放回")]),a._v(" "),s("p",[a._v("redis 采用主从、集群防止宕机")]),a._v(" "),s("p",[a._v("采用分区扣减，每台机器都存储一部分库存数据，使用负载均衡算法解决数据倾斜")]),a._v(" "),s("p",[a._v("网关层限流 记录访问次数，超过丢弃")]),a._v(" "),s("h3",{attrs:{id:"负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[a._v("#")]),a._v(" 负载均衡")]),a._v(" "),s("p",[a._v("轮询、权重、hash、取模运算")]),a._v(" "),s("h3",{attrs:{id:"redis-集群复制过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-集群复制过程"}},[a._v("#")]),a._v(" redis 集群复制过程")]),a._v(" "),s("h3",{attrs:{id:"jvm-模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm-模型"}},[a._v("#")]),a._v(" jvm 模型")]),a._v(" "),s("h3",{attrs:{id:"gc-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gc-算法"}},[a._v("#")]),a._v(" gc 算法")]),a._v(" "),s("h3",{attrs:{id:"垃圾回收器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收器"}},[a._v("#")]),a._v(" 垃圾回收器")]),a._v(" "),s("h3",{attrs:{id:"spring-初始化-bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-初始化-bean"}},[a._v("#")]),a._v(" spring 初始化 Bean")]),a._v(" "),s("h3",{attrs:{id:"ioc-实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ioc-实现原理"}},[a._v("#")]),a._v(" ioc 实现原理")]),a._v(" "),s("h3",{attrs:{id:"aop-代理区别-使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop-代理区别-使用场景"}},[a._v("#")]),a._v(" aop 代理区别，使用场景")])])}),[],!1,null,null,null);t.default=e.exports}}]);