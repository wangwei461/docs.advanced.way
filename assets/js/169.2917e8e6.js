(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{740:function(a,t,r){"use strict";r.r(t);var s=r(28),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h2",{attrs:{id:"基本结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基本结构"}},[a._v("#")]),a._v(" 基本结构")]),a._v(" "),r("p",[a._v("事件驱驱动架构由三个基本组件构成，事件、事件处理器、事件循环。事件产生后发送给事件循环，事件循环将每个事件分派给个各个事件处理器")]),a._v(" "),r("h3",{attrs:{id:"事件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[a._v("#")]),a._v(" 事件")]),a._v(" "),r("p",[a._v("事件驱动架构的核心是事件。事件至少包含两个必须的属性：类型和数据")]),a._v(" "),r("h3",{attrs:{id:"事件处理器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事件处理器"}},[a._v("#")]),a._v(" 事件处理器")]),a._v(" "),r("p",[a._v("处理器用来处理具体的事件。常用的操作包括过滤、转换与事件关联的数据")]),a._v(" "),r("h3",{attrs:{id:"事件循环"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[a._v("#")]),a._v(" 事件循环")]),a._v(" "),r("p",[a._v("当事件循环接收到事件后，会将事件派发给每个事件各自的处理器")]),a._v(" "),r("h2",{attrs:{id:"应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[a._v("#")]),a._v(" 应用")]),a._v(" "),r("h3",{attrs:{id:"观察者模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式"}},[a._v("#")]),a._v(" 观察者模式")]),a._v(" "),r("p",[r("RouterLink",{attrs:{to:"/middleware/patterns/behavior/观察者模式.html"}},[a._v("观察者模式")])],1),a._v(" "),r("h3",{attrs:{id:"jdk观察者模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jdk观察者模式"}},[a._v("#")]),a._v(" JDK观察者模式")]),a._v(" "),r("h3",{attrs:{id:"javabean事件驱动"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javabean事件驱动"}},[a._v("#")]),a._v(" JavaBean事件驱动")]),a._v(" "),r("h3",{attrs:{id:"spring事件驱动"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring事件驱动"}},[a._v("#")]),a._v(" Spring事件驱动")])])}),[],!1,null,null,null);t.default=e.exports}}]);